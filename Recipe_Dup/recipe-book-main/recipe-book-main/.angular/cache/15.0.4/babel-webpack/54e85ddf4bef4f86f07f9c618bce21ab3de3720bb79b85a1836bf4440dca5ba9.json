{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ListService {\n  constructor() {\n    this.list = [];\n    this.msg = \"uploaded\";\n  }\n  selectFile(event) {\n    var reader = new FileReader();\n    reader.readAsDataURL(event.target.files[0]);\n    reader.onload = _event => {\n      this.msg = \"\";\n      this.url = reader.result;\n    };\n    return this.url;\n  }\n  add(nm) {\n    this.list.push({\n      id: this.list.length + 1,\n      name1: this.name,\n      desc1: this.desc,\n      img: this.url\n    });\n  }\n}\nListService.ɵfac = function ListService_Factory(t) {\n  return new (t || ListService)();\n};\nListService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ListService,\n  factory: ListService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,WAAW;EAHxBC;IAMS,SAAI,GAAK,EAAE;IAIlB,QAAG,GAAG,UAAU;;EAElBC,UAAU,CAACC,KAAU;IAEnB,IAAIC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC7BD,MAAM,CAACE,aAAa,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE3CJ,MAAM,CAACK,MAAM,GAAIC,MAAM,IAAI;MACzB,IAAI,CAACC,GAAG,GAAG,EAAE;MACb,IAAI,CAACC,GAAG,GAAGR,MAAM,CAACS,MAAM;IAC1B,CAAC;IACD,OAAO,IAAI,CAACD,GAAG;EACjB;EACAE,GAAG,CAACC,EAAS;IACX,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC;MAACC,EAAE,EAAC,IAAI,CAACF,IAAI,CAACG,MAAM,GAAC,CAAC;MAACC,KAAK,EAAC,IAAI,CAACC,IAAI;MAACC,KAAK,EAAC,IAAI,CAACC,IAAI;MAACC,GAAG,EAAC,IAAI,CAACZ;IAAG,CAAC,CAAC;EACtF;;AAtBaZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAyB,SAAXzB,WAAW;EAAA0B,YAFV;AAAM","names":["ListService","constructor","selectFile","event","reader","FileReader","readAsDataURL","target","files","onload","_event","msg","url","result","add","nm","list","push","id","length","name1","name","desc1","desc","img","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\mca\\Desktop\\Arpita FYMCA\\recipebook\\src\\app\\list.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListService {\n  public name:any;\n  public desc:any;\n  public list:any=[]\n  public rimg:any;\n  \n  url: any;\n  msg = \"uploaded\";\n\nselectFile(event: any) { \n\n  var reader = new FileReader();\n  reader.readAsDataURL(event.target.files[0]);\n\n  reader.onload = (_event) => {\n    this.msg = \"\";\n    this.url = reader.result; \n  }\n  return this.url;\n}\nadd(nm:string){\n  this.list.push({id:this.list.length+1,name1:this.name,desc1:this.desc,img:this.url});\n}\n  }\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}